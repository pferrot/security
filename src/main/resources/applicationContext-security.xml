<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
						   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
	
	<bean id="security.userDaoTarget" class="com.pferrot.security.dao.hibernate.UserDaoHibernateImpl">
		<property name="sessionFactory" ref="security.sessionFactory" />
	</bean>
	<bean id="security.userDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="security.transactionManager"/>
		<property name="target">
			<ref local="security.userDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.security.dao.UserDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
	
	<bean id="security.customUserDetailsServiceTarget" class="com.pferrot.security.authentication.userdetails.CustomUserDetailsService">
		<property name="userDao" ref="security.userDao" />
	</bean>
	<bean id="security.customUserDetailsService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="security.transactionManager" />
		<property name="target">
			<ref local="security.customUserDetailsServiceTarget" />
		</property>
		<property name="proxyInterfaces">
           <value>org.springframework.security.userdetails.UserDetailsService</value>
         </property>
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>         
<!--         <property name="interceptorNames">-->
<!--           <list>-->
<!--              <value>security.hibernateInterceptor</value>-->
<!--           </list>-->
<!--         </property>-->
	</bean>
	
<!--	<bean id="security.hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">-->
<!--         <property name="sessionFactory">-->
<!--           <ref bean="security.sessionFactory"/>-->
<!--         </property>-->
<!--    </bean>-->

	
	<bean id="security.lastLoginListenerTarget" class="com.pferrot.security.authentication.listener.LastLoginListener">
    	<property name="userDao" ref="security.userDao"/>
	</bean>	
	<bean id="security.lastLoginListener" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="security.transactionManager"/>
		<property name="target">
			<ref local="security.lastLoginListenerTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="onApplicationEvent">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 
	If the authentication manager needs to be referenced.
	 -->
	<security:authentication-manager alias="authenticationManager" />
	
	<bean id="security.daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="security.customUserDetailsService" />
		<!--
			No cache is used by default. 
			<property name="userCache" ref="userCache"/>
		-->
		<property name="passwordEncoder">
			<bean class="org.springframework.security.providers.encoding.Md5PasswordEncoder" />
		</property>
		<security:custom-authentication-provider />
	</bean>	
	
</beans>